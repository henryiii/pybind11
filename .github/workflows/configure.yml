name: Config

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - stable
      - v*

jobs:
  cmake:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64]
        cmake: [3.18]

        include:
        - runs-on: ubuntu-latest
          arch: x64
          cmake: 3.4

        - runs-on: macos-latest
          arch: x64
          cmake: 3.7

        - runs-on: windows-2016
          arch: x86
          cmake: 3.8

        - runs-on: windows-2016
          arch: x86
          cmake: 3.18

    name: 🐍 3.7 • CMake ${{ matrix.cmake }} • ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
        architecture: ${{ matrix.arch }}

    - name: Prepare env
      run: python -m pip install -r tests/requirements.txt

    - name: Setup CMake ${{ matrix.cmake }}
      uses: jwlawson/actions-setup-cmake@v1.3
      with:
        cmake-version: ${{ matrix.cmake }}

    - name: Make build directories
      run: mkdir "build dir"

    - name: Configure
      working-directory: build dir
      shell: bash
      run: >
        cmake ..
        -DPYBIND11_WERROR=ON
        -DDOWNLOAD_CATCH=ON
        -DPYTHON_EXECUTABLE=$(python -c "import sys; print(sys.executable)")

    - name: Build
      working-directory: build dir
      if: github.event_name == 'workflow_dispatch'
      run: cmake --build . --config Release

    - name: Test
      working-directory: build dir
      if: github.event_name == 'workflow_dispatch'
      run: cmake --build . --config Release --target check

  test-packaging:
    name: 🐍 2.7 • 📦 tests • windows-latest
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup 🐍 2.7
      uses: actions/setup-python@v2
      with:
        python-version: 2.7

    - name: Prepare env
      run: python -m pip install -r tests/requirements.txt --prefer-binary

    - name: Python Packaging tests
      run: pytest tests/extra_python_package/


  packaging:
    name: 🐍 3.8 • 📦 & 📦 tests • ubuntu-latest
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup 🐍 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Prepare env
      run: python -m pip install -r tests/requirements.txt wheel twine --prefer-binary

    - name: Python Packaging tests
      run: pytest tests/extra_python_package/

    - name: Build SDist
      run: |
        python setup.py sdist
        PYBIND11_ALT_SDIST=1 python setup.py sdist

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*

    - name: Build wheel
      run: |
        python -m pip wheel . -w wheels
        PYBIND11_ALT_SDIST=1 python -m pip wheel . -w wheels

    - uses: actions/upload-artifact@v2
      with:
        path: wheels/pybind11*.whl

    - name: Check metadata
      run: twine check dist/* wheels/*
